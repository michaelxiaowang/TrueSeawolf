
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CA7DFF2E3EDF44CB34F29039CA1F84FE'
    
_lr_action_items = {'MORE':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,29,29,-43,-34,29,-39,29,-33,29,-32,-27,29,29,29,29,-40,None,-18,None,29,-19,29,-26,-14,None,-17,-16,None,-13,29,None,-15,29,None,-31,-41,29,-42,]),'MOREEQUAL':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,40,40,-43,-34,40,-39,40,-33,40,-32,-27,40,40,40,40,-40,None,-18,None,40,-19,40,-26,-14,None,-17,-16,None,-13,40,None,-15,40,None,-31,-41,40,-42,]),'LESSEQUAL':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,37,37,-43,-34,37,-39,37,-33,37,-32,-27,37,37,37,37,-40,None,-18,None,37,-19,37,-26,-14,None,-17,-16,None,-13,37,None,-15,37,None,-31,-41,37,-42,]),'LPAREN':([0,2,4,5,8,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,80,83,89,91,92,93,94,102,103,105,107,],[2,2,22,23,24,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-3,-9,2,-10,2,-2,2,-8,-12,2,-11,]),'ASSIGN':([1,3,6,7,9,10,13,20,28,47,48,53,54,55,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,90,96,101,],[-34,-43,-36,-38,-37,-35,34,-43,-39,-28,-33,34,-32,-27,-40,-23,-18,-22,-19,-26,-14,-24,-17,-16,-25,-13,-30,-21,-15,-29,-20,-31,-41,-42,]),'VAR':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,60,80,83,89,91,92,93,94,95,102,103,105,107,],[3,20,20,20,20,3,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,3,20,-3,-9,20,-10,3,-2,3,20,-8,-12,3,-11,]),'EXP':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,30,30,-43,-34,30,-39,30,30,30,30,-27,30,30,30,30,-40,30,-18,30,30,30,30,30,30,30,-17,-16,30,30,30,30,-15,30,30,-31,-41,30,-42,]),'NOT':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,80,83,89,91,92,93,94,102,103,105,107,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-3,-9,14,-10,14,-2,14,-8,-12,14,-11,]),'MOD':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,38,38,-43,-34,38,-39,38,38,38,38,-27,38,38,38,38,-40,38,38,38,38,38,38,38,38,38,-17,-16,38,38,38,38,-15,38,38,-31,-41,38,-42,]),'DIV':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,39,39,-43,-34,39,-39,39,39,39,39,-27,39,39,39,39,-40,39,39,39,39,39,39,39,39,39,39,-16,39,39,39,39,-15,39,39,-31,-41,39,-42,]),'AND':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,45,45,-43,-34,45,-39,-28,-33,45,-32,-27,45,45,45,45,-40,-23,-18,-22,45,-19,45,-26,-14,-24,-17,-16,-25,-13,45,-21,-15,-29,-20,-31,-41,45,-42,]),'SEMICOLON':([1,3,6,7,9,10,20,28,47,48,53,54,55,56,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,90,96,101,],[-34,-43,-36,-38,-37,-35,-43,-39,-28,-33,82,-32,-27,83,-40,-23,-18,-22,-19,91,-26,-14,-24,-17,-16,-25,-13,-30,-21,-15,-29,-20,93,-31,-41,-42,]),'IF':([0,17,52,80,83,91,92,93,94,102,103,105,107,],[8,8,8,-3,-9,-10,8,-2,8,-8,-12,8,-11,]),'MULT':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,44,44,-43,-34,44,-39,44,44,44,44,-27,44,44,44,44,-40,44,44,44,44,44,44,44,44,44,44,-16,44,44,44,44,-15,44,44,-31,-41,44,-42,]),'STRING':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,60,80,83,89,91,92,93,94,95,102,103,105,107,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-3,-9,9,-10,9,-2,9,9,-8,-12,9,-11,]),'INT':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,60,80,83,89,91,92,93,94,95,102,103,105,107,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-3,-9,10,-10,10,-2,10,10,-8,-12,10,-11,]),'RBRACK':([1,6,7,9,10,11,20,26,27,28,47,48,54,55,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,87,88,90,96,97,100,101,],[-34,-36,-38,-37,-35,28,-43,-34,61,-39,-28,-33,-32,-27,-40,-23,-18,-22,90,-19,-26,-14,-24,-17,-16,-25,-13,-30,-21,-15,-29,-20,-46,96,-31,-41,101,-45,-42,]),'EQUAL':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,46,46,-43,-34,46,-39,46,-33,46,-32,-27,46,46,46,46,-40,None,-18,None,46,-19,46,-26,-14,None,-17,-16,None,-13,46,None,-15,46,None,-31,-41,46,-42,]),'WHILE':([0,17,52,80,83,91,92,93,94,102,103,105,107,],[4,4,4,-3,-9,-10,4,-2,4,-8,-12,4,-11,]),'COMMA':([6,7,9,10,20,25,26,28,61,87,96,101,],[-36,-38,-37,-35,-43,60,-44,-39,-40,95,-41,-42,]),'LBRACK':([0,1,2,3,6,7,9,10,11,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,89,90,91,92,93,94,95,96,97,101,102,103,105,107,],[11,-34,11,-43,-36,-38,-37,-35,11,32,11,11,11,11,32,-43,11,11,11,11,-34,32,-39,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,32,32,11,32,32,-27,32,32,32,32,11,-40,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-3,-9,11,-31,-10,11,-2,11,11,-41,32,-42,-8,-12,11,-11,]),'FLRDIV':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,33,33,-43,-34,33,-39,33,33,33,33,-27,33,33,33,33,-40,33,-18,33,33,-19,33,33,33,33,-17,-16,33,33,33,33,-15,33,33,-31,-41,33,-42,]),'RBRACE':([17,49,50,51,52,80,81,82,83,91,92,93,94,98,99,102,103,105,106,107,],[-47,-7,-4,80,-47,-3,-5,-6,-9,-10,-47,-2,-47,102,103,-8,-12,-47,107,-11,]),'SUB':([0,1,2,3,6,7,9,10,11,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,89,90,91,92,93,94,96,97,101,102,103,105,107,],[15,-34,15,-43,-36,-38,-37,-35,15,36,15,15,15,15,36,-43,15,15,15,15,-34,36,-39,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,36,-33,15,36,-32,-27,36,36,36,36,-40,36,-18,36,36,-19,36,36,-14,36,-17,-16,36,-13,36,36,-15,36,36,-3,-9,15,-31,-10,15,-2,15,-41,36,-42,-8,-12,15,-11,]),'PRINT':([0,17,52,80,83,91,92,93,94,102,103,105,107,],[5,5,5,-3,-9,-10,5,-2,5,-8,-12,5,-11,]),'$end':([12,16,80,83,91,93,102,103,107,],[-1,0,-3,-9,-10,-2,-8,-12,-11,]),'RPAREN':([1,6,7,9,10,19,20,28,47,48,54,55,57,58,59,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,90,96,101,],[-34,-36,-38,-37,-35,55,-43,-39,-28,-33,-32,-27,84,85,86,-40,-23,-18,-22,-19,-26,-14,-24,-17,-16,-25,-13,-30,-21,-15,-29,-20,-31,-41,-42,]),'LBRACE':([0,17,52,80,83,84,86,91,92,93,94,102,103,104,105,107,],[17,17,17,-3,-9,92,94,-10,17,-2,17,-8,-12,105,17,-11,]),'ADD':([0,1,2,3,6,7,9,10,11,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,89,90,91,92,93,94,96,97,101,102,103,105,107,],[18,-34,18,-43,-36,-38,-37,-35,18,41,18,18,18,18,41,-43,18,18,18,18,-34,41,-39,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,41,-33,18,41,-32,-27,41,41,41,41,-40,41,-18,41,41,-19,41,41,-14,41,-17,-16,41,-13,41,41,-15,41,41,-3,-9,18,-31,-10,18,-2,18,-41,41,-42,-8,-12,18,-11,]),'ELSE':([103,],[104,]),'OR':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,42,42,-43,-34,42,-39,-28,-33,42,-32,-27,42,42,42,42,-40,-23,-18,-22,42,-19,42,-26,-14,-24,-17,-16,-25,-13,-30,-21,-15,-29,-20,-31,-41,42,-42,]),'NEQUAL':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,43,43,-43,-34,43,-39,43,-33,43,-32,-27,43,43,43,43,-40,None,-18,None,43,-19,43,-26,-14,None,-17,-16,None,-13,43,None,-15,43,None,-31,-41,43,-42,]),'REAL':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,60,80,83,89,91,92,93,94,95,102,103,105,107,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-3,-9,6,-10,6,-2,6,6,-8,-12,6,-11,]),'LESS':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,31,31,-43,-34,31,-39,31,-33,31,-32,-27,31,31,31,31,-40,None,-18,None,31,-19,31,-26,-14,None,-17,-16,None,-13,31,None,-15,31,None,-31,-41,31,-42,]),'IN':([1,3,6,7,9,10,13,19,20,26,27,28,47,48,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,90,96,97,101,],[-34,-43,-36,-38,-37,-35,35,35,-43,-34,35,-39,35,-33,35,-32,-27,35,35,35,35,-40,35,-18,35,35,-19,35,-26,-14,35,-17,-16,35,-13,35,35,-15,35,35,-31,-41,35,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[16,]),'empty':([17,52,92,94,105,],[49,49,49,49,49,]),'tail':([60,95,],[88,100,]),'statement':([0,17,52,92,94,105,],[12,52,52,52,52,52,]),'expression':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,89,92,94,105,],[13,19,27,47,48,53,54,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,53,97,53,53,53,]),'block':([17,92,94,105,],[51,98,99,106,]),'var':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,60,89,92,94,95,105,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'statement_list':([17,52,92,94,105,],[50,81,50,50,50,]),'head':([11,],[25,]),'term':([0,2,11,14,15,17,18,21,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,60,89,92,94,95,105,],[1,1,26,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,87,1,1,1,87,1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','fakeSeawolf.py',315),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_print','fakeSeawolf.py',324),
  ('statement -> LBRACE block RBRACE','statement',3,'p_statement_block','fakeSeawolf.py',330),
  ('block -> statement_list','block',1,'p_block','fakeSeawolf.py',338),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','fakeSeawolf.py',345),
  ('statement_list -> expression SEMICOLON','statement_list',2,'p_statement_list','fakeSeawolf.py',346),
  ('statement_list -> empty','statement_list',1,'p_statement_list','fakeSeawolf.py',347),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE','statement',7,'p_statement_while','fakeSeawolf.py',359),
  ('statement -> VAR ASSIGN expression SEMICOLON','statement',4,'p_statement_assignment','fakeSeawolf.py',365),
  ('statement -> expression ASSIGN expression SEMICOLON','statement',4,'p_statement_assignment','fakeSeawolf.py',366),
  ('statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE','statement',11,'p_statement_if','fakeSeawolf.py',372),
  ('statement -> IF LPAREN expression RPAREN LBRACE block RBRACE','statement',7,'p_statement_if','fakeSeawolf.py',373),
  ('expression -> expression ADD expression','expression',3,'p_expression','fakeSeawolf.py',382),
  ('expression -> expression SUB expression','expression',3,'p_expression','fakeSeawolf.py',383),
  ('expression -> expression MULT expression','expression',3,'p_expression','fakeSeawolf.py',384),
  ('expression -> expression DIV expression','expression',3,'p_expression','fakeSeawolf.py',385),
  ('expression -> expression MOD expression','expression',3,'p_expression','fakeSeawolf.py',386),
  ('expression -> expression EXP expression','expression',3,'p_expression','fakeSeawolf.py',387),
  ('expression -> expression FLRDIV expression','expression',3,'p_expression','fakeSeawolf.py',388),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','fakeSeawolf.py',389),
  ('expression -> expression NEQUAL expression','expression',3,'p_expression','fakeSeawolf.py',390),
  ('expression -> expression LESS expression','expression',3,'p_expression','fakeSeawolf.py',391),
  ('expression -> expression MORE expression','expression',3,'p_expression','fakeSeawolf.py',392),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_expression','fakeSeawolf.py',393),
  ('expression -> expression MOREEQUAL expression','expression',3,'p_expression','fakeSeawolf.py',394),
  ('expression -> expression IN expression','expression',3,'p_expression','fakeSeawolf.py',395),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','fakeSeawolf.py',396),
  ('expression -> NOT expression','expression',2,'p_expression','fakeSeawolf.py',397),
  ('expression -> expression AND expression','expression',3,'p_expression','fakeSeawolf.py',398),
  ('expression -> expression OR expression','expression',3,'p_expression','fakeSeawolf.py',399),
  ('expression -> expression LBRACK expression RBRACK','expression',4,'p_expression','fakeSeawolf.py',400),
  ('expression -> ADD expression','expression',2,'p_expression','fakeSeawolf.py',401),
  ('expression -> SUB expression','expression',2,'p_expression','fakeSeawolf.py',402),
  ('expression -> term','expression',1,'p_expression_term','fakeSeawolf.py',421),
  ('term -> INT','term',1,'p_term_int_real_string','fakeSeawolf.py',435),
  ('term -> REAL','term',1,'p_term_int_real_string','fakeSeawolf.py',436),
  ('term -> STRING','term',1,'p_term_int_real_string','fakeSeawolf.py',437),
  ('term -> var','term',1,'p_term_int_real_string','fakeSeawolf.py',438),
  ('term -> LBRACK RBRACK','term',2,'p_term_int_real_string','fakeSeawolf.py',439),
  ('term -> LBRACK expression RBRACK','term',3,'p_term_int_real_string','fakeSeawolf.py',440),
  ('term -> LBRACK head COMMA tail RBRACK','term',5,'p_term_int_real_string','fakeSeawolf.py',441),
  ('term -> LBRACK expression RBRACK LBRACK expression RBRACK','term',6,'p_term_int_real_string','fakeSeawolf.py',442),
  ('var -> VAR','var',1,'p_var','fakeSeawolf.py',455),
  ('head -> term','head',1,'p_head_term','fakeSeawolf.py',461),
  ('tail -> term COMMA tail','tail',3,'p_tail','fakeSeawolf.py',468),
  ('tail -> term','tail',1,'p_tail','fakeSeawolf.py',469),
  ('empty -> <empty>','empty',0,'p_empty','fakeSeawolf.py',478),
]
